server {
    listen 80 default_server;
    listen [::]:80 default_server;

    ##
    # SSL configuration
    ##

    # listen 443 ssl http2 default_server;
    # listen [::]:443 ssl http2 default_server;
    # sl_certificate /path/to/signed_cert_plus_intermediates;
    # ssl_certificate_key /path/to/private_key;
    # ssl_session_timeout 1d;
    # ssl_session_cache shared:SSL:50m;
    # ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # ssl_dhparam /path/to/dhparam.pem;

    # ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    # ssl_ciphers '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305|ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]:ECDHE+AES128:RSA+AES128:ECDHE+AES256:RSA+AES256';
    # ssl_ecdh_curve X25519:P-256:P-384;
    # ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    # add_header Strict-Transport-Security max-age=15768000;

    root /usr/share/nginx/html;
    charset utf-8;
    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name _;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
    }

    # pass PHP scripts to FastCGI server
    #
    #location ~ \.php$ {
    #    # regex to split $uri to $fastcgi_script_name and $fastcgi_path
    #    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    #    # Check that the PHP script exists before passing it
    #    try_files $fastcgi_script_name =404;
    #    # Bypass the fact that try_files resets $fastcgi_path_info
    #    set $path_info $fastcgi_path_info;
    #    fastcgi_param PATH_INFO $path_info;
    #    fastcgi_index index.php;
    #    include fastcgi.conf;
    #    # With php-fpm (or other unix sockets):
    #    fastcgi_pass unix:/run/php/php7.3-fpm.sock;
    #    # With php-cgi (or other tcp sockets):
    #    fastcgi_pass 127.0.0.1:9000;
    #}

    # deny access to .htaccess files, if Apache's document root concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny all;
    #}
}
